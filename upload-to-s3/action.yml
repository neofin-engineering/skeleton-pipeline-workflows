name: Upload Lambda ZIP to S3
description: Extrai o bucket do JSON e faz upload do artefato da Lambda

inputs:
  global_env_vars_json_main:
    description: "JSON com vari√°veis globais para a branch main"
    required: false
  global_env_vars_json_dev:
    description: "JSON com vari√°veis globais para a branch dev"
    required: false
  global_env_vars_json_sandbox:
    description: "JSON com vari√°veis globais para a branch sandbox"
    required: false
  aws_access_key_id:
    description: "AWS Access Key ID"
    required: true
  aws_secret_access_key:
    description: "AWS Secret Access Key"
    required: true
  aws_region:
    description: "Regi√£o AWS para o upload"
    required: false
    default: "us-east-1"
  project_name:
    description: "Nome do projeto para compor o nome do artefato .zip"
    required: true

runs:
  using: composite
  steps:
    # üèóÔ∏è Valida√ß√µes b√°sicas dos inputs
    - name: Validate inputs
      shell: bash
      run: |
        test -n "${{ inputs.project_name }}" || (echo "::error::File '${{ inputs.project_name }}' does not exist" && exit 1)

    # ----------------------------------------
    # üïµÔ∏è SELECIONA O JSON COM BASE NA BRANCH
    # ----------------------------------------
    - name: Selecionar JSON de vari√°veis de ambiente
      id: set-env-json
      shell: bash
      run: |
        BRANCH_NAME="${{ github.base_ref }}"
        case "$BRANCH_NAME" in
          "main")
            if [ -z "${{ inputs.global_env_vars_json_main }}" ]; then
              echo "::error::global_env_vars_json_main is required for the main branch" && exit 1
            fi
            echo "::set-output name=env_json::${{ inputs.global_env_vars_json_main }}"
            ;;
          "dev")
            if [ -z "${{ inputs.global_env_vars_json_dev }}" ]; then
              echo "::error::global_env_vars_json_dev is required for the dev branch" && exit 1
            fi
            echo "::set-output name=env_json::${{ inputs.global_env_vars_json_dev }}"
            ;;
          "sandbox")
            if [ -z "${{ inputs.global_env_vars_json_sandbox }}" ]; then
              echo "::error::global_env_vars_json_sandbox is required for the sandbox branch" && exit 1
            fi
            echo "::set-output name=env_json::${{ inputs.global_env_vars_json_sandbox }}"
            ;;
          *)
            echo "::error::Branch '$BRANCH_NAME' is not supported." && exit 1
            ;;
        esac

    # -------------------------------
    # üß© EXTRAI NOME DO BUCKET DO JSON
    # -------------------------------
    # üóÇÔ∏è Identifica o Bucket S3 reposit√≥rio do Zip
    - name: Extrair nome do bucket do JSON
      shell: bash
      run: |
        # Usando a sa√≠da da etapa anterior
        ENV_JSON="${{ steps.set-env-json.outputs.env_json }}"

        echo "$ENV_JSON" > global_env_vars.json
        BUCKET_NAME=$(jq -r '.S3_BUCKET_NAME' global_env_vars.json)

        if [ -z "$BUCKET_NAME" ] || [ "$BUCKET_NAME" = "null" ]; then
          echo "‚ùå Falha ao extrair o nome do bucket do JSON:"
          cat global_env_vars.json
          exit 1
        fi

        echo "S3_BUCKET_NAME=$BUCKET_NAME" >> $GITHUB_ENV
        echo "‚ÑπÔ∏è Utilizando bucket: $BUCKET_NAME"

    # -------------------------------
    # ‚òÅÔ∏è UPLOAD ZIP PARA O S3
    # -------------------------------
    # ‚òÅÔ∏è Realiza o upload do ZIP para o bucket S3
    - name: Upload Lambda ZIP to S3
      shell: bash
      env:
        AWS_ACCESS_KEY_ID: ${{ inputs.aws_access_key_id }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.aws_secret_access_key }}
        AWS_REGION: ${{ inputs.aws_region }}
      run: |
        set -e
        if [ ! -f "${{ inputs.project_name }}.zip" ]; then
          echo "‚ùå Arquivo ${{ inputs.project_name }}.zip n√£o encontrado."
          exit 1
        fi

        echo "üöÄ Enviando ${{ inputs.project_name }}.zip para S3..."
        aws s3 cp "${{ inputs.project_name }}.zip" "s3://$S3_BUCKET_NAME/${{ inputs.project_name }}.zip" \
        --region $AWS_REGION --acl private
        
        set +e
        echo "‚úÖ Upload conclu√≠do: s3://$S3_BUCKET_NAME/${{ inputs.project_name }}.zip"
